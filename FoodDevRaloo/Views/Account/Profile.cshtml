@model FoodDevRaloo.Models.ProfileViewModel

@{
    ViewData["Title"] = "Profile";
}

<div class="main">
    <h1>@ViewData["Title"]</h1>
    <div class="profile-details">
        <h2>User Details</h2>
        <p><strong>Username:</strong> @Model.Username</p>
        <p><strong>Email:</strong> @Model.Email</p>
        <p><strong>First Name:</strong> @Model.FirstName</p>
        <p><strong>Last Name:</strong> @Model.LastName</p>

        @if (string.IsNullOrEmpty(Model.Address))
        {
            <p class="no-address">You have not set an address!</p>
        }
        else
        {
            <p><strong>Address:</strong> <span id="address-display">@Model.Address</span></p>
        }
        <button id="change-address-btn">Change Address</button>

        <h2>Change Password</h2>
        <button id="change-password-btn">Change Password</button>
    </div>

    <div id="change-address-modal" class="modal hidden">
        <form id="change-address-form">
            <input type="text" name="address" placeholder="New Address" required />
            <input type="hidden" name="__RequestVerificationToken" value="@ViewData["RequestVerificationToken"]" />
            <button type="submit">Save Address</button>
            <button type="button" id="cancel-change-address">Cancel</button>
        </form>
    </div>

    <div id="change-password-modal" class="modal hidden">
        <form id="change-password-form">
            <input type="password" name="currentPassword" placeholder="Current Password" required />
            <input type="password" name="newPassword" placeholder="New Password" required />
            <input type="password" name="confirmNewPassword" placeholder="Confirm New Password" required />
            <input type="hidden" name="__RequestVerificationToken" value="@ViewData["RequestVerificationToken"]" />
            <button type="submit">Save Password</button>
            <button type="button" id="cancel-change-password">Cancel</button>
        </form>
    </div>
</div>

<script>
    document.getElementById("change-address-btn").addEventListener("click", function () {
        document.getElementById("change-address-modal").classList.remove("hidden");
    });

    document.getElementById("cancel-change-address").addEventListener("click", function () {
        document.getElementById("change-address-modal").classList.add("hidden");
    });

    document.getElementById("change-password-btn").addEventListener("click", function () {
        document.getElementById("change-password-modal").classList.remove("hidden");
    });

    document.getElementById("cancel-change-password").addEventListener("click", function () {
        document.getElementById("change-password-modal").classList.add("hidden");
    });

    document.getElementById("change-address-form").addEventListener("submit", function (e) {
        e.preventDefault();
        const address = e.target.address.value;
        const token = e.target.__RequestVerificationToken.value;

        fetch('@Url.Action("ChangeAddress", "Account")', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': token
            },
            body: JSON.stringify({ address })
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    document.getElementById("address-display").innerText = data.address;
                    document.getElementById("change-address-modal").classList.add("hidden");
                } else {
                    alert("Failed to change address.");
                }
            });
    });

    document.getElementById("change-password-form").addEventListener("submit", function (e) {
        e.preventDefault();
        const currentPassword = e.target.currentPassword.value;
        const newPassword = e.target.newPassword.value;
        const confirmNewPassword = e.target.confirmNewPassword.value;
        const token = e.target.__RequestVerificationToken.value;

        fetch('@Url.Action("ChangePassword", "Account")', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': token
            },
            body: JSON.stringify({ currentPassword, newPassword, confirmNewPassword })
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    document.getElementById("change-password-modal").classList.add("hidden");
                    alert("Password changed successfully.");
                } else {
                    alert(data.message || "Failed to change password.");
                }
            });
    });
</script>

<style>
    .hidden {
        display: none;
    }

    .profile-details {
        padding: 20px;
        background-color: var(--lightGrey);
        border-radius: 8px;
    }

        .profile-details h2 {
            color: var(--darkBlack);
        }

        .profile-details p {
            margin: 10px 0;
        }

        .profile-details button {
            margin: 10px 0;
            padding: 10px;
            background-color: var(--green);
            color: white;
            border: none;
            border-radius: 8px;
            cursor: pointer;
        }

            .profile-details button:hover {
                background-color: var(--yellow);
            }

    .modal {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: white;
        padding: 20px;
        border-radius: 8px;
        box-shadow: rgba(0, 0, 0, 0.3) 0px 2px 10px;
    }

        .modal form {
            display: flex;
            flex-direction: column;
        }

            .modal form input, .modal form button {
                margin: 10px 0;
                padding: 10px;
            }
</style>
